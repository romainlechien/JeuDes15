/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jeudes15.components;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;
import javax.swing.JOptionPane;
import jeudes15.models.GridModel;
import jeudes15.models.JetonModel;

/**
 *
 * @author duboisem
 */
public class JeuDes15Frame extends javax.swing.JFrame {

    private PropertyChangeListener endGamePropertyChangeListener;
    private GridModel model;

    /**
     * Creates new form JeuDes15Frame
     */
    public JeuDes15Frame() {

        endGamePropertyChangeListener = new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent pce) {
                GridModel newGrid = (GridModel) pce.getNewValue();
                updateJeuDes15(newGrid);
            }
        };
        model = new GridModel();
        this.model.addPropertyChangeListener(GridModel.ENDGAME_PROPERTY, endGamePropertyChangeListener);
        initFrame();
    }

    /**
     * Creates new form JeuDes15Frame
     */
    public JeuDes15Frame(GridModel modelCible) {

        endGamePropertyChangeListener = new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent pce) {
                GridModel newGrid = (GridModel) pce.getNewValue();
                updateJeuDes15(newGrid);
            }
        };
        model = modelCible;
        this.model.addPropertyChangeListener(GridModel.ENDGAME_PROPERTY, endGamePropertyChangeListener);
        initFrame();
    }

    public GridModel getModel() {
        return model;
    }

    public void setModel(GridModel model) {
        this.model = model;
    }

    private void updateJeuDes15(GridModel newGrid) {
        if (newGrid.isThereAWinner()) {
            createPopUpFinJeu("Le vainqueur est le joueur " + newGrid.whoIsTheWinner());
        } else if (newGrid.isThereAnEquality()) {
            createPopUpFinJeu("Pas de vainqueur.");
        }
    }

    private void createPopUpFinJeu(String msgFin) {
        Object[] options = {"Rejouer",
            "Annuler"};
        int popUpInfoEndGame = JOptionPane.showOptionDialog(this,
                msgFin,
                "Fin du jeu",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title

        if (popUpInfoEndGame == JOptionPane.YES_OPTION) {
            System.out.println("NEW GAME");
            model.newGame();
        } else if (popUpInfoEndGame == JOptionPane.NO_OPTION) {
            // Ne rien faire
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        classicView1 = new jeudes15.components.ClassicView();
        morpion1 = new jeudes15.components.Morpion();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mi_NewGame = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.addTab("tab1", classicView1);
        jTabbedPane1.addTab("tab2", morpion1);

        jMenu1.setText("Menu");

        mi_NewGame.setText("New Game");
        mi_NewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_NewGameActionPerformed(evt);
            }
        });
        jMenu1.add(mi_NewGame);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mi_NewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_NewGameActionPerformed
        model.newGame();
    }//GEN-LAST:event_mi_NewGameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JeuDes15Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JeuDes15Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JeuDes15Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JeuDes15Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JeuDes15Frame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private jeudes15.components.ClassicView classicView1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem mi_NewGame;
    private jeudes15.components.Morpion morpion1;
    // End of variables declaration//GEN-END:variables

    private void initFrame() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        classicView1 = new jeudes15.components.ClassicView();
        morpion1 = new jeudes15.components.Morpion();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mi_NewGame = new javax.swing.JMenuItem();

        classicView1 = new jeudes15.components.ClassicView(model);
        morpion1 = new jeudes15.components.Morpion(model);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.addTab("Classic View", classicView1);
        jTabbedPane1.addTab("Tic Tac Toe", morpion1);

        jMenu1.setText("Menu");

        mi_NewGame.setText("New Game");
        mi_NewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_NewGameActionPerformed(evt);
            }
        });
        jMenu1.add(mi_NewGame);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }

}
